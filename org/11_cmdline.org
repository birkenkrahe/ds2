#+TITLE:Data science on the command line - Introduction
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:Introduction to advanced data science
#+STARTUP:overview hideblocks indent inlineimages
#+OPTIONS: toc:nil num:nil ^:nil
#+PROPERTY: header-args:bash :exports both :results output
#+PROPERTY: header-args:sh :exports both :results output
* README
#+attr_latex: :width 400px
#+caption: Photo: Super Hornet. Source: Flickr.com flic.kr/p/2nDe28b
[[../img/11_hornet.jpg]]

Short introduction to doing data science on the command line:
- What is the command line?
- Why use the command line for data science?
- How to get a command line that works for data science?
- Downloading data with ~curl~ and ~wget~
- Cleaning data on the command line
- Database operations on the command line
- Introduction to the ~csvkit~ toolkit (Python)
- Introduction to the ~xsv~ toolkit (Rust)
- Practice with Linux (DataCamp workspaces)

* Workflow: expectation vs. reality
#+attr_html: :width 500px
#+caption: Data science pipeline (Janssen, 2021)
[[../img/11_pipeline.png]]

* What is the command line?

- Shell
- bash, csh, sh, zsh, ksh
- CMD line
- Terminal
- tty

  #+attr_html: :width 500px
  #+caption: Command line terminal (bash)
  [[../img/11_bash.png]]

  | CMD LINE TOOL      | EXAMPLE         |
  |--------------------+-----------------|
  | Binary executable  | ~bash --help~     |
  | Shell builtin      | ~cd .~            |
  | Interpreted script | ~hello.sh~        |
  | Shell function     | ~pwd~, ~date~, ~echo~ |
  | Alias              | ~alias~         |


#+attr_html: :width 500px
#+caption: Things to do on the command line (Source: Janssens, 2021)
[[../img/11_cmdline.png]]

* Why use the command line for data science

1. Program to interact with the operating system (kernel)
2. Sophisticated script language
3. REPL (Read-Eval-Print-Loop)
4. Agile and exploratory
5. Augmenting technology (glue to other applications)
   - Run pipeline (e.g. ~ls -a | wc -w~)
   - Run from inside your R program
   - Convert R code to command line script
6. Scalability:
   - it's fast
   - used to automate tasks
   - repeatable and parallelizable
7. Extensibility:
   - language agnostic
   - been in use a long time
   - continuously improved
8. Ubiquitous: comes with all OS
9. Cool (hacker value)
10. Relatable (logical approach)

    All of these are especially valuable in an exploratory environment
    with highly distributed, unstructured, or "dirty" data sources.

* How to get a command line that works for data science

- Install a Docker container as described [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-to-set-up-a-docker-container-for-command-line-work][in this FAQ]]
- Install the Ubuntu app as [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-can-i-install-linux-under-windows-10][described in this FAQ]]
- Get Linux as a dual boot or with VirtualBox (any distro)
- Get a Linux computer ([[https://vilros.com/products/raspberry-pi-400-kit][like this one for $99]]) or dump Windows for
  Linux and install it over Windows

  Online/cloud installations like Google cloud shell, or replit.com,
  or the bundle of UNIX commands contained in ~cygwin~ do unfortunately
  not allow you to install the ~csvkit~ library, and exclude some other
  commands (like ~wget~).

- The Docker container already comes with ~cvskit~. Once you've got
  another Linux variant, install ~cvskit~ from the command line, e.g. in
  Debian-based systems (Raspberry Pi OS, Ubuntu) with the command ~sudo
  apt install csvkit~.

* Download files from the web with ~curl~

* References

- Gallant (2021). xsv. URL: [[https://github.com/BurntSushi/xsv][github.com]].
- Janssens (2021). Data science at the command line (2e). O'Reilly.
