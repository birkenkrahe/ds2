#+TITLE:Data science on the command line
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:Introduction to advanced data science
#+STARTUP:overview hideblocks indent inlineimages
#+OPTIONS: toc:nil num:nil ^:nil
#+PROPERTY: header-args:bash :exports both :results output
* README
#+attr_latex: :width 400px
#+caption: Photo: Super Hornet. Source: Flickr.com flic.kr/p/2nDe28b
[[../img/11_hornet.jpg]]

Short introduction to doing data science on the command line:
- What is the command line?
- Why use the command line for data science?
- How to get a command line that works for data science?
- Downloading and cleaning data on the command line
- Database operations on the command line
- Downloading data with ~curl~ and ~wget~
- Regular expression primer
- Introduction to the ~csvkit~ toolkit (Python)
- Introduction to the ~xsv~ toolkit (Rust)
- Practice with Linux (DataCamp workspaces)

* Beyond csvkit

- Before this term, I had not worked with csvkit myself. My work on
  the command line was limited to the UNIX commands that I know
  (which by themselves are pretty powerful, at least for
  non-descript text files).

- To go beyond ~csvkit~, you need to look beyond data scrubbing (which
  is where ~csvkit~ excels), into the other parts of the data science
  pipeline: visualization (on the command line with the R package
  ~rush~), modeling, and presenting, managing projects with GNU ~make~ and
  UNIX ~cron~, R scripting and running scripts with ~littler~ and GNU
  ~rush~.

- Of course, R has a console that is already tuned to interactive
  explorative use - but it's slow, especially if you're interested in
  routine big data processing, and if you don't want to write your own
  programs (e.g. in C++ and import them into R with ~Rcpp~).

- Links:
  - [[http://jeroenjanssens.github.io/rush/][R rush]] - run expressions, create plots etc. from the shell
  - [[https://cran.r-project.org/web/packages/littler/index.html][R littler]] - command line script support
  - [[https://puszcza.gnu.org.ua/software/rush/][GNU rush]] - reduced shell for parallel execution
  - [[https://www.gnu.org/software/make/][GNU make]] - generate executables from source
  - [[https://swcarpentry.github.io/r-novice-inflammation/05-cmdline/index.html][R on the command line]] - tutorial (30 min)
  - [[https://app.datacamp.com/learn/courses/data-processing-in-shell][Data processing in shell]] - DataCamp course (4 hrs)
  - [[https://rolkra.github.io/regex-for-beginners-detect/][Brief introduction to regular expressions in R]] for beginners

  You should remember these functions:
  #+begin_src R :exports both :session :results output
    grep("Orange", c("Orange", "Apple","Lemon","Orange"))
  #+end_src

  #+begin_src R :exports both :session :results output
    grepl("Orange", c("Orange", "Apple","Lemon","Orange"))
  #+end_src
* TODO Using ~xsv~ (Rust)

- [[https://lindevs.com/install-xsv-on-ubuntu][Lindevs (2021)]]
- [[https://towardsdatascience.com/understand-your-csv-files-from-your-terminal-with-xsv-65255ae67293][Tran, TowardsDataScience (2021).]]

* References

- Gallant (2021). xsv. URL: [[https://github.com/BurntSushi/xsv][github.com]].
- Janssens (2021). Data science at the command line (2e). O'Reilly.
