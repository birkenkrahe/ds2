#+TITLE: CODING LOOPS WITH "apply" - LECTURE
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: DSC 205 - Advanced introduction to data science
#+STARTUP: overview hideblocks indent inlineimages
#+OPTIONS: toc:nil num:nil ^:nil
#+PROPERTY: header-args:R :session *R* :results output :exports both :noweb yes
#+attr_html: :width 300px
* README
#+attr_html: :width 300px
#+caption: Photo by Brett Jordan on Unsplash
[[../img/7_goforit.jpg]]

- Download the *raw* file to code along during the lecture [[https://github.com/birkenkrahe/ds2/tree/main/org][from GitHub]],
  save it as ~7_loop_apply_codealong.org~ and upload it to Canvas later.

- To test your Emacs mettle, open it on the CMD line with the command
  ~emacs -nw~ (no graphics - not needed for this exercise).
* 
* TODO Exercises
#+attr_latex: :width 400px
[[../img/exercise.jpg]]

1) Continuing from the most recent example, write an implicit loop
   that calculates the product of all the column elements of the
   matrix returned by the call to ~apply(foo, 1, sort,
   decreasing=TRUE)~.

2) Convert the following ~for~ loop to an implicit loop that does
   exactly the same thing. Here, ~t~ transposes its matrix argument.
   #+name: matlist :noweb yes
   #+begin_src R
     matlist <- list(
       matrix(c(T,F,T,T),2,2),
       matrix(c("a","c","b","z","p","q"),3,2),
       matrix(1:8,2,4))
     matlist
     for (i in 1:length(matlist)) {
       matlist[[i]] <- t(matlist[[i]])
     }
     matlist
   #+end_src

* TODO Glossary

| TERM | MEANING |
|------+---------|
|      |         |

* References

- Davies, T.D. (2016). The Book of R. NoStarch Press.
